name: Continuous Integration

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [develop]

jobs:
  # Lint and type check
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Lint backend
        working-directory: ./backend
        run: npm run lint --if-present
        
      - name: Type check backend
        working-directory: ./backend
        run: npm run type-check --if-present
        
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint --if-present
        
      - name: Type check frontend
        working-directory: ./frontend
        run: npm run type-check --if-present

  # Run tests
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
          
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Setup test database
        working-directory: ./backend
        run: |
          npx prisma generate
          npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test_user:test_pass@localhost:5432/test_db
          
      - name: Run backend tests
        working-directory: ./backend
        run: npm test --if-present
        env:
          DATABASE_URL: postgresql://test_user:test_pass@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          NODE_ENV: test
          
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test --if-present
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1

  # Build check
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install and build backend
        working-directory: ./backend
        run: |
          npm ci
          npm run build
          
      - name: Install and build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
        env:
          NEXT_PUBLIC_API_URL: https://api.example.com/api/v1